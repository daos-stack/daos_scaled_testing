#! /bin/bash

# Globals
metdata_server="n"
final_rank="n"
nodelist="n"
generic_config_file="daos_server_dual_generic.yml"
path="/opt/crtdc/daos/master/vishwana/config/vishwana"
env="/opt/crtdc/daos/master/vishwana/centos7/env.sh"
debug="n"
engines="n"
print_percent=0

get_percent()
{
	if [ -z "$engines" ]; then
		echo -ne "."
		return
	fi

	if [ ${print_percent} -eq 0 ]; then
		echo -e "\n"
		print_percent=1
	fi

	percent=$(((${engines}*100/${final_rank}) + (${engines} % ${final_rank} > 0)))
	if [ $percent -le 30 ]; then
		echo -ne "||                  [${percent}%]"\\r
	elif [ $percent -le 50 ]; then
		echo -ne "||||||||||          [${percent}%]"\\r
	elif [ $percent -le 70 ]; then
		echo -ne "|||||||||||||       [${percent}%]"\\r
	elif [ $percent -le 90 ]; then
		echo -ne "||||||||||||||||    [${percent}%]"\\r
	elif [ $percent -eq 100 ]; then
		echo -ne "||||||||||||||||||||[${percent}%]"\\r
	fi
	if [ $percent -eq 100 ]; then
		echo -e "\nServer Started Successfully\n"
	fi
}

usage()
{
	echo "Usage: launch_daos_servers [OPTIONS]
  	
  	Options:
	  -m, --metadata_server <name/ip>	Metadata leader name
	  -l, --node_list <list>		Format [server1,server2,..] 
	  -e, --env_file <path>			Path to env file
	  					default [/opt/crtdc/daos/master/vishwana/centos7/env.sh]
	  -p, --path <path>			Path to config files
	  					default [/opt/crtdc/daos/master/vishwana/config/vishwana]
	  -f, --config_file <filename>		Generic config file name to generate metadata server
	  					specific config files.
						default [daos_server_single_generic.yml]
	  -d, --debug				Debug (y/n) -- default (n)
	  -r, --rank				Max server rank (ex for 16 engines, max rank is 15)"
  exit 2
}

ARGS=$(getopt -a -n launch_daos_servers -o hm:l:p:f:e:d:r: --long metadata_server:,node_list:,path:,config_file:,env_file:,debug:,rank: -- "$@")
eval set -- "$ARGS"
while :
do
  case "$1" in
    -h | --help)		usage		     ; shift ;;
    -m | --metadata_server)	metadata_server="$2" ; shift 2 ;;
    -l | --node_list)		nodelist="$2"     ; shift 2 ;;
    -p | --path)		path="$2"	     ; shift 2 ;;
    -f | --config_file)		config_file="$2"     ; shift 2 ;;
    -e | --env_file)		env_file="$2"	     ; shift 2 ;;
    -d | --debug)		debug="$2"	     ; shift 2 ;;
    -r | --rank)		final_rank="$2"    ; shift 2 ;;
    --) shift; break ;;
    *) echo "Unexpected option: $1."
       usage ;;
  esac
done

if [ -z "${metadata_server}" ] || [ -z "${nodelist}" ] || [ -z "${final_rank}" ]; 
then
	usage
fi
echo "Cleanup servers .. "
clush -w ${nodelist} -l daos_server 'rm  -rf /mnt/daos0/* && rm -rf /mnt/daos1/* && pkill -9 daos' 2> /dev/null 
clush -w ${nodelist} -l daos_server 'rm  -rf /mnt/daos0/* && rm -rf /mnt/daos1/* && pkill -9 daos' 2> /dev/null
clush -w ${nodelist} -l daos_server 'rm -f /dev/hugepages/spdk*'

echo "Waiting for cleanup to complete"
sleep 30
echo "Done Cleanup .."

set -x
ssh daos_server@${metadata_server} \
	"screen -d -m -S ${metadata_server}.session /opt/crtdc/daos/master/vishwana/config/vishwana/server_start \
	-m ${metadata_server} -l ${nodelist} -e ${env} -p ${path} -f ${generic_config_file} &" 
set +x
source ${env}
echo -e "Check Progress.. \n1. ssh daos_server@${metadata_server}\n2. screen -dr ${metadata_server}.session"
echo "Server Starting at ${metadata_server}"
set +x
timespan="15 minutes"
joined=0
endt=$(date -ud "$timespan" +%s)
progress="/|\\-/|\\-"
while [[ $(date -u +%s) < $endt ]]
do
	sleep 0.1
	if [ $final_rank == 0 ]; then
		dmg -o ${path}/daos_control_${metadata_server}.yml system query 2>&1 | grep -i joined
		if [ $? == 0 ]; then
			joined=1; res=0;
			echo "Server started successfully"
			break;
		fi
	fi
	engines=$(dmg -o ${path}/daos_control_${metadata_server}.yml system query 2>&1 | grep -i joined | tr -d '[]' | awk -F'-| ' '{print $2}')
	if [ $? = 0 ]; then
		if [[ $engines == $final_rank ]]; then
			joined=1; res=0;
			echo "Server started successfully"
			break
		else
			if [  "$5" = "y" ] || [ "$5" = "y" ]; then
				echo -e "started: $engines expected: $final_rank"
			fi
			echo -n "${progress:$i:1}"
			echo -en "\010"
			get_percent
			continue
		fi
	fi
done

if [[ $joined == 0 ]]; then
	exit 1
fi
